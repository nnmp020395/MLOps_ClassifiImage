name: CI with Docker Compose

on:
  push:
    branches: [ cicd ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:latest
        options: --privileged

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Set environment variables
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> $GITHUB_ENV

    - name: Build and run containers
      run: docker-compose -f docker-compose.yaml up -d --build

    - name: Copy and install test dependencies
      run: |
        docker cp requirements-ci.txt fastapi-api:/tmp/requirements-ci.txt
        docker cp requirements-ci.txt airflow-cli:/tmp/requirements-ci.txt
        docker cp requirements-ci.txt streamlit:/tmp/requirements-ci.txt

        docker-compose exec -T fastapi-api pip install -r /tmp/requirements-ci.txt
        docker-compose exec -T airflow-cli pip install -r /tmp/requirements-ci.txt
        docker-compose exec -T streamlit pip install -r /tmp/requirements-ci.txt


    - name: Run unit tests in containers
      run: |
        docker-compose exec -T fastapi-api pytest tests/test_api || exit 1
        docker-compose exec -T airflow-cli pytest tests/test_dags || exit 1
        docker-compose exec -T fastapi-api pytest tests/test_src || exit 1
        docker-compose exec -T streamlit pytest tests/test_streamlit || exit 1

    - name: Run health checks (optional)
      run: |
        curl --fail http://localhost:8080/health
        curl --fail http://localhost:6000/health
        curl --fail http://localhost:8000/docs
        curl --fail http://localhost:8501/

    - name: Shut down containers
      run: docker-compose -f docker-compose.yaml down