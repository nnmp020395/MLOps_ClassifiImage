apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.35.0 (HEAD)
    meta.helm.sh/release-name: my-release1
    meta.helm.sh/release-namespace: default
  labels:
    app.kubernetes.io/managed-by: Helm
    io.kompose.service: airflow-init
  name: airflow-init
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: airflow-init
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: airflow-init
    spec:
      containers:
        - args:
            - -c
            - |
              mkdir -p /sources/logs /sources/dags /sources/plugins
              chown -R ":0" /sources/{logs,dags,plugins}
              exec /entrypoint airflow version
          command:
            - /bin/bash
          env:
            - name: AIRFLOW__API__ACCESS_CONTROL_ALLOW_HEADERS
              value: content-type, origin, authorization, accept
            - name: AIRFLOW__API__ACCESS_CONTROL_ALLOW_METHODS
              value: GET, POST, OPTIONS, DELETE
            - name: AIRFLOW__API__ACCESS_CONTROL_ALLOW_ORIGINS
              value: '*'
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: "false"
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: postgresql+psycopg2://airflow:airflow@postgres/airflow
            - name: AWS_ACCESS_KEY_ID
              value: minioadmin
            - name: AWS_DEFAULT_REGION
              value: us-east-1
            - name: AWS_SECRET_ACCESS_KEY
              value: minioadmin
            - name: _AIRFLOW_DB_UPGRADE
              value: "true"
            - name: _AIRFLOW_WWW_USER_CREATE
              value: "true"
            - name: _AIRFLOW_WWW_USER_PASSWORD
              value: airflow
            - name: _AIRFLOW_WWW_USER_USERNAME
              value: airflow
            - name: _PIP_ADDITIONAL_REQUIREMENTS
          image: airflow-init
          name: airflow-init
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          volumeMounts:
            - mountPath: /sources
              name: airflow-init-cm0
      restartPolicy: Always
      volumes:
        - configMap:
            name: airflow-init-cm0
          name: airflow-init-cm0
