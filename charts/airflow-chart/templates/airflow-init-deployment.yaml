apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-airflow-init
  labels:
    app.kubernetes.io/managed-by: Helm
    app: airflow-init
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-init
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: airflow-init
    spec:
      containers:
        - name: airflow-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
          args:
            - -c
            - |
              mkdir -p /sources/logs /sources/dags /sources/plugins
              chown -R ":0" /sources/{logs,dags,plugins}
              exec /entrypoint airflow version
          env:
            - name: AIRFLOW__API__ACCESS_CONTROL_ALLOW_HEADERS
              value: content-type, origin, authorization, accept
            - name: AIRFLOW__API__ACCESS_CONTROL_ALLOW_METHODS
              value: GET, POST, OPTIONS, DELETE
            - name: AIRFLOW__API__ACCESS_CONTROL_ALLOW_ORIGINS
              value: '*'
            - name: AIRFLOW__CORE__EXECUTOR
              value: {{ .Values.airflow.executor }}
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: "{{ .Values.airflow.loadExamples }}"
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: {{ .Values.airflow.databaseUrl }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.minio.accessKey }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.minio.secretKey }}
            - name: S3_ENDPOINT
              value: {{ .Values.minio.endpoint }}
            - name: _AIRFLOW_DB_UPGRADE
              value: "true"
            - name: _AIRFLOW_WWW_USER_CREATE
              value: "true"
            - name: _AIRFLOW_WWW_USER_USERNAME
              value: {{ .Values.airflow.webUser }}
            - name: _AIRFLOW_WWW_USER_PASSWORD
              value: {{ .Values.airflow.webPassword }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
            - mountPath: /sources
              name: airflow-init-cm0
      restartPolicy: Always
      volumes:
        - name: airflow-init-cm0
          configMap:
            name: airflow-init-cm0
